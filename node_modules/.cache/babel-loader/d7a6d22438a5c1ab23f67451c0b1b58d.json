{"ast":null,"code":"var _jsxFileName = \"/home/tumisang/workspace/distance-to-time-in-react/src/Components/Eg.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeInput = () => {\n  _s();\n\n  const [value, setValue] = React.useState(\"0:00\");\n\n  const onChange = event => {\n    setValue(event.target.value);\n  };\n\n  const onBlur = event => {\n    const value = event.target.value;\n    const seconds = Math.max(0, getSecondsFromHHMMSS(value));\n    const time = toHHMMSS(seconds);\n    setValue(time);\n  };\n\n  const getSecondsFromHHMMSS = value => {\n    const [str1, str2, str3] = value.split(\":\");\n    const val1 = Number(str1);\n    const val2 = Number(str2);\n    const val3 = Number(str3);\n\n    if (!isNaN(val1) && isNaN(val2) && isNaN(val3)) {\n      return val1;\n    }\n\n    if (!isNaN(val1) && !isNaN(val2) && isNaN(val3)) {\n      return val1 * 60 + val2;\n    }\n\n    if (!isNaN(val1) && !isNaN(val2) && !isNaN(val3)) {\n      return val1 * 60 * 60 + val2 * 60 + val3;\n    }\n\n    return 0;\n  };\n\n  const toHHMMSS = secs => {\n    const secNum = parseInt(secs.toString(), 10);\n    const hours = Math.floor(secNum / 3600);\n    const minutes = Math.floor(secNum / 60) % 60;\n    const seconds = secNum % 60;\n    return [hours, minutes, seconds].map(val => val < 10 ? `0${val}` : val).filter((val, index) => val !== \"00\" || index > 0).join(\":\").replace(/^0/, \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"input1\",\n    type: \"text\",\n    onChange: onChange,\n    onBlur: onBlur,\n    value: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TimeInput, \"Wrrd23+fGGRV7GxUj0/ReVBTNjU=\");\n\n_c = TimeInput;\nexport default Eg;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeInput\");","map":{"version":3,"sources":["/home/tumisang/workspace/distance-to-time-in-react/src/Components/Eg.js"],"names":["React","TimeInput","value","setValue","useState","onChange","event","target","onBlur","seconds","Math","max","getSecondsFromHHMMSS","time","toHHMMSS","str1","str2","str3","split","val1","Number","val2","val3","isNaN","secs","secNum","parseInt","toString","hours","floor","minutes","map","val","filter","index","join","replace","Eg"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst TimeInput = () => {\n    const [value, setValue] = React.useState(\"0:00\");\n  \n    const onChange = (event) => {\n      setValue(event.target.value);\n    };\n  \n    const onBlur = (event) => {\n      const value = event.target.value;\n      const seconds = Math.max(0, getSecondsFromHHMMSS(value));\n  \n      const time = toHHMMSS(seconds);\n      setValue(time);\n    };\n  \n    const getSecondsFromHHMMSS = (value) => {\n      const [str1, str2, str3] = value.split(\":\");\n  \n      const val1 = Number(str1);\n      const val2 = Number(str2);\n      const val3 = Number(str3);\n  \n      if (!isNaN(val1) && isNaN(val2) && isNaN(val3)) {\n        return val1;\n      }\n  \n      if (!isNaN(val1) && !isNaN(val2) && isNaN(val3)) {\n        return val1 * 60 + val2;\n      }\n  \n      if (!isNaN(val1) && !isNaN(val2) && !isNaN(val3)) {\n        return val1 * 60 * 60 + val2 * 60 + val3;\n      }\n  \n      return 0;\n    };\n  \n    const toHHMMSS = (secs) => {\n      const secNum = parseInt(secs.toString(), 10);\n      const hours = Math.floor(secNum / 3600);\n      const minutes = Math.floor(secNum / 60) % 60;\n      const seconds = secNum % 60;\n  \n      return [hours, minutes, seconds]\n        .map((val) => (val < 10 ? `0${val}` : val))\n        .filter((val, index) => val !== \"00\" || index > 0)\n        .join(\":\")\n        .replace(/^0/, \"\");\n    };\n  \n    return (\n      <input className=\"input1\" type=\"text\" onChange={onChange} onBlur={onBlur} value={value} />\n    );\n  };\n\nexport default Eg\n"]},"metadata":{},"sourceType":"module"}