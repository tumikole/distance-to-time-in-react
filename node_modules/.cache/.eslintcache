[{"/home/tumisang/workspace/distance-to-time-in-react/src/index.js":"1","/home/tumisang/workspace/distance-to-time-in-react/src/App.js":"2","/home/tumisang/workspace/distance-to-time-in-react/src/Components/CalculatingDistatance.js":"3","/home/tumisang/workspace/distance-to-time-in-react/src/Components/Timer.js":"4","/home/tumisang/workspace/distance-to-time-in-react/src/reportWebVitals.js":"5"},{"size":548,"mtime":1641975768238,"results":"6","hashOfConfig":"7"},{"size":310,"mtime":1641990796625,"results":"8","hashOfConfig":"7"},{"size":2194,"mtime":1642061876858,"results":"9","hashOfConfig":"7"},{"size":1177,"mtime":1641990771249,"results":"10","hashOfConfig":"7"},{"size":362,"mtime":1641971879611,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1h954rj",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/tumisang/workspace/distance-to-time-in-react/src/index.js",[],["24","25"],"/home/tumisang/workspace/distance-to-time-in-react/src/App.js",[],"/home/tumisang/workspace/distance-to-time-in-react/src/Components/CalculatingDistatance.js",["26","27"],"import React, { useState } from \"react\";\nimport { Card, Button, CardTitle, CardText, Row, Col } from \"reactstrap\";\n\nfunction CalculatingDistatance() {\n  const [distance, updateDistance] = useState({\n    walking: \"00:00\",\n    driving: \"00:00\",\n    flight: \"00:00\",\n    value: 0,\n  });\n\n  let walkingSpeed = 3.6;\n  let drivingSpeed = 80;\n  let flightSpeed = 800;\n\n  const updateValue = (ev) => {\n    updateDistance({\n      value: [ev.target.value],\n      walking: +ev.target.value / walkingSpeed,\n      driving: +ev.target.value / drivingSpeed.toFixed(2),\n      flight: +ev.target.value / flightSpeed.toFixed(2),\n    })\n  };\n\n  return (\n    <div id=\"container\">\n      <small>Enter distance in km/h</small>\n      <div id=\"box1\">\n        <input\n          type=\"number\"\n          value={distance.value}\n          onChange={updateValue}\n          placeholder=\"Add distance in km/h\"\n        />\n      </div>\n      <br />\n      <Card style={{ width: \"30%\", margin: \"auto\" }}>\n        <Row\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: \"1fr\",\n            margin: \"0 auto\",\n            width: \"108rem\",\n          }}\n        >\n          <Col sm=\"4\">\n            <Card body>\n              <CardTitle style={{ fontSize: \"2rem\" }}>Walking</CardTitle>\n              <CardText>Avarage time to reach your destination </CardText>\n              <Button disabled>{typeof distance.walking === \"number\" > 0 ?  Math.floor(distance.walking) : Math.ceil(distance.walking)}</Button>\n            </Card>\n          </Col>\n          <Col sm=\"4\">\n            <Card body>\n              <CardTitle style={{ fontSize: \"2rem\" }}>Driving</CardTitle>\n              <CardText>Avarage time to reach your destination</CardText>\n              <Button disabled>{distance.driving}</Button>\n            </Card>\n          </Col>\n          <Col sm=\"4\">\n            <Card body>\n              <CardTitle style={{ fontSize: \"2rem\" }}>Flight</CardTitle>\n              <CardText>Avarage time to reach your destination</CardText>\n              <Button disabled>{distance.flight}</Button>\n            </Card>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n}\n\nexport default CalculatingDistatance;\n","/home/tumisang/workspace/distance-to-time-in-react/src/Components/Timer.js",[],"/home/tumisang/workspace/distance-to-time-in-react/src/reportWebVitals.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":50,"column":57,"nodeType":"34","messageId":"35","endLine":50,"endColumn":60},{"ruleId":"32","severity":1,"message":"33","line":50,"column":70,"nodeType":"34","messageId":"35","endLine":50,"endColumn":71},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-mixed-operators","Unexpected mix of '===' and '>'. Use parentheses to clarify the intended order of operations.","BinaryExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]